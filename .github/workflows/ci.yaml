name: Build distribution

on: [pull_request, push, workflow_dispatch]

jobs:
  Poetry-Build: 
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with: 
          submodules: recursive

      - name: Setup python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9 # ${{ matrix.python-version }}
          architecture: x64
      
      - name: Setup meson dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build

      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      
      - name: Install meson python 
        run: |
          python -m pip install --user meson --no-deps

      - name: Check meson is installed 
        run: 
          meson --version
      
      - name: Install pybind globally 
        run: 
          python -m pip install "pybind11[global]"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.2.1
      
      # - name: Install PIL globally 
      #   run: sudo apt-get install -y Pillow 

      - name: Install gfortran, LAPACK, and LAPACKE 
        run: |
          sudo apt update -yq
          sudo apt install -yq --no-install-recommends ninja-build gfortran liblapack-dev liblapacke-dev

      # - name: Install tk 
      #   run: sudo apt-get install tk

      - name: Install dependencies with poetry 
        run: poetry install -vvv
      
      # - name: Build extension modules 
      #   run: |
      #     meson setup build
      #     meson compile -vC build

      - name: Install armadillo again 
        run: |
          sudo apt-get install libarmadillo-dev

      - name: Run ldconfig 
        run: |
          sudo ldconfig

      - name: Build package with poetry 
        run: poetry build -vvv
          
      # - name: Install extension modules  
      #   run: |
      #     cp build/*.so src/tallem/pbm/

      # - name: Build the wheel with poetry 
      #   run: poetry build -vvv
      
      # - name: Build requirements.txt 
      #   run: poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Install the wheel with pip
        run: pip install dist/tallem-*.whl --no-deps --use-deprecated=legacy-resolver

      - name: Run tests with pytest
        run: |
          sudo -H pip install pytest
          pip install pytest
          python -m pip install pytest 
          poetry run pytest tests/

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/tallem-*.whl

  build_pip:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9 
          architecture: x64
      
      - name: Setup linux APT dependencies 
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build
          pip install --upgrade pip
          sudo apt install -yq --no-install-recommends ninja-build gfortran liblapack-dev liblapacke-dev
          sudo ldconfig

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.16.x'
      
      - name: Build package with pip 
        run: |
          pip install .
      
      - name: Run tests with pytest
        run: |
          sudo -H pip install pytest
          pip install pytest
          python -m pip install pytest 
          pytest tests/
      
      # on mac: Group dependencies w/ delocate!
      # sudo delocate-listdeps /Users/mpiekenbrock/tallem/dist/tallem-0.1.4-cp39-cp39-macosx_10_15_x86_64.whl && delocate-wheel --require-archs x86_64 -w /Users/mpiekenbrock/tallem/repaired/ /Users/mpiekenbrock/tallem/dist/tallem-0.1.4-cp39-cp39-macosx_10_15_x86_64.whl 

  build_ciwheels: 
    runs-on: "ubuntu-latest"  
    env:
      CIBW_TEST_REQUIRES: pytest
      CIBW_TEST_COMMAND: "pytest {project}/tests"
      CIBW_BUILD_FRONTEND: "build"
      CIBW_BEFORE_ALL_LINUX: >
        sudo add-apt-repository universe &&
        sudo apt-get update &&
        sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build &&
        pip install --upgrade pip &&
        sudo ldconfig
    steps:
    - uses: actions/checkout@v2

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.16.x'

    - uses: pypa/cibuildwheel@v1.12.0
      
    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

      