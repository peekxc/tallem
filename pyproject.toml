# pyproject.toml
[project]
requires-python = ">=3.8,<3.10"

[build-system]
requires = ["setuptools>=42", "wheel", "poetry>=1.0.10", "meson>=0.59.0", "ninja", "cmake"]
build-backend = "poetry.masonry.api" # build backends for pip to use to building the wheel

[tool.poetry]
name = "tallem"
version = "0.1.4"
description = "Topological Assembly of Locally Euclidean Models"
license = "Apache-2.0"
authors = ["Matt Piekenbrock <matt.piekenbrock@gmail.com>"]
readme = "README.md"
repository = "https://github.com/peekxc/tallem"
classifiers = [
	"Development Status :: 3 - Alpha", 
	"License :: OSI Approved :: Apache Software License", 
	"Operating System :: OS Independent",
	"Programming Language :: Python :: 3",
	"Intended Audience :: Science/Research"
]
build = "build.py"
packages = [
	{ include = "tallem", from = "src" }, # from = "src/tallem" 
]
include = [
	{ path = "src/**/*.so", format = "wheel" },
	"README.md"
] # TODO: configure this to add/remove things


[tool.poetry.dependencies]
python = ">=3.8,<3.10"
build = ">=0.7"
wheel = ">=0.37"
meson = ">=0.52"
ninja = ">=1.10"
scipy = ">=1.6"
Shapely = "^1.7"
autograd = {version = ">=.3", optional = true}
pymanopt = {version = ">=0.2.5", optional = true}
scikit-learn = {version = ">=1.0", optional = true}
numpy = "1.20"
llvmlite = "0.37.0"
numba = "^0.54.1"

[tool.poetry.dev-dependencies]
pytest = ">=3.4"

# scripts as: package.submodule:function
# [tool.poetry.scripts]
Cython = "^0.29.24"

## Original requirements manually compiled from the list generated by " pipdeptree | grep -e '^\S' " specified in the src/tallem directory 
[tool.poetry.extras]
autograd = ["autograd"]
pymanopt = ["pymanopt"]
sklearn = ["sklearn"]

[tool.cibuildwheel]
test-requires = "pytest"
test-command = "pytest {project}/tests"
build = "cp38-*" #"cp36-win32" "cp36-manylinux* cp38-macosx_x86_64"
build-frontend = "build" # "pip"

[tool.cibuildwheel.linux]
archs = ["auto64"] # "aarch64"
before-all = [
	"sudo add-apt-repository universe",
	"sudo apt-get update",
	"sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build",
	"sudo apt update -yq",
	"sudo apt install -yq --no-install-recommends ninja-build gfortran liblapack-dev liblapacke-dev",
	"sudo apt-get install libarmadillo-dev",
	"sudo ldconfig"
]

